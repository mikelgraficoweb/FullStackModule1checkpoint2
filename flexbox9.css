.square {
    width: 100px;
    height: 100px;
    background-color: #73dab2;
}

.flex {
    margin: 10px;
}

.flexOne {
    display: flex;
    flex-direction: row;
}

.flexOne .square {
    margin: 5px;
}
.flexTwo{
    display: flex;
    flex-direction: column;
}

.flexTwo .square {
    margin: 2px;
}

.flexThree{
    display: flex;
    flex-direction: row-reverse;
}

.flexThree .square {
    margin: 2px;
}

.flexFour{
    display: flex;
    flex-flow: wrap;
    width:350px;
   /* border: 2px solid #73dab2;  You will see that the fourth square automatically wraps to the bottom and starts a new row because it cannot fit in the 450 pixels with the other squares. This would be very useful for a website like Instagram, when you know the format you want for your images or posts but donâ€™t know how many you will have. Using flex-wrap, your code automatically handles formatting your elements.
 */
}

.flexFour .square {
    margin: 5px;
    background-color:#3d8b6d
}

.flexFive{
    width: 350px;
    display: flex;
}

.flexFive .item{
    background-color:#0b6643;
    width:100px;
    height:100px;
    margin: 2px;
} 

#grow {
    flex-grow:2; /* This will make it so the leftover space, 
    which would normally be divided equally between the elements 
    or unused by flex, will be applied to the middle item and make it take up twice the extra space than the other elements do. */
}

.flexSix{
    height:400px;
    width:500px;
    background-color:#f1f1f1;
    flex-direction:column;
}
.flexSix .one {
    display: flex;
    justify-content:space-around;
}

.flexSix .two {
    display: flex;
    justify-content:space-between; 
    margin:50px 0;
    background-color:#d6d6d6;  
    /* The color will help us see the rows we are creating */
}
.flexSix .three{
    display: flex;
    justify-content:space-evenly; 
}

.flexSeven{
    height:400px;
    width:500px;
    display: flex;
    justify-content:space-between;
}

.flexSeven .one,.flexSeven .two,.flexSeven .three,.flexSeven .four {
    display: flex;
    flex-direction: column;
    background-color:#d6d6d6;  
    /* The color will help us see the columns we are creating*/
}
.flexSeven .one {
    justify-content:center;
}
.flexSeven .two {
    justify-content:flex-end;
}
.flexSeven .three {
    justify-content:flex-start;
}
.flexSeven .four {
    justify-content:space-between;
 
}

.flexEight{
    height:400px;
    background-color:#eeeeee;
    width:300px;
    display: flex;
}
/* align items can also let us move elements vertically. */
.flexEight .one {
    display: flex;
    align-items: center;
}
.flexEight .two {
    display: flex;
    align-items: flex-end;
}
.flexEight .three {
    display: flex;
    align-items:flex-start;
}

.flexNine {
    width:450px;
    height:250px;
    display: flex;
    justify-content:space-evenly;
    background-color:#eeeeee;
}
.flexNine .square{
    align-items:flex-start;
}
#special{
    align-self:flex-end;
}